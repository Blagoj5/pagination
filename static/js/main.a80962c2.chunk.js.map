{"version":3,"sources":["constants/id-prefixes.ts","components/elements/Drawer/DrawerLink.tsx","components/elements/Drawer/DrawerAccordion.tsx","components/elements/Drawer/DrawerItem.tsx","components/modules/Drawer.tsx","components/modules/markdowns/Markdown.tsx","components/modules/Api.tsx","components/modules/Installation.tsx","components/elements/PrimaryButton.tsx","components/modules/Playground.tsx","components/modules/Usage.tsx","pages/Home.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["INSTALLATION_PREFIX","USAGE_PREFIX","DrawerLink","id","name","rest","p","cursor","d","href","DrawerAccordion","item","prefix","allowMultiple","border","_focus","fontSize","flex","textAlign","lg","base","py","pb","shadow","bg","subContent","map","navItem","DrawerItem","listItemContent","color","content","Drawer","as","minH","overflowX","background","w","h","position","left","top","size","fontWeight","listStyleType","ml","index","Markdown","markdown","plugins","gfm","components","h1","node","props","mb","h2","children","value","toLowerCase","my","h3","split","join","h4","h5","code","className","inline","match","exec","style","dracula","language","PreTag","String","replace","px","a","ul","ordered","listStylePos","li","table","variant","mt","thead","tbody","tr","th","td","Api","Installation","PrimaryButton","onClick","_hover","_active","defaultItems","Playground","usePagination","items","limit","paginationResult","nextPage","previousPage","setCurrentPage","setItems","inputRef","React","useRef","maxW","rounded","alignItems","maxH","md","overflowY","roundedTop","direction","roundedBottom","justify","spacing","m","mr","isDisabled","has_previous_page","has_next_page","htmlFor","placeholder","current_page","onChange","_","ref","type","roundedRight","e","preventDefault","all_items","current","roundedLeft","borderColor","filter","_item","removeHandler","borderBottom","transition","css","orientation","height","pl","JSON","stringify","Usage","Home","theme","extendTheme","colors","primary","100","900","main","styles","global","body","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a80962c2.chunk.js","sourcesContent":["export const INSTALLATION_PREFIX = 'installation/';\nexport const USAGE_PREFIX = 'usage/';\n","import { Link, LinkProps } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface DrawerLinkProps extends LinkProps {\n  id: string;\n  name: string;\n}\n\nexport const DrawerLink: React.FC<DrawerLinkProps> = ({\n  id,\n  name,\n  ...rest\n}) => {\n  return (\n    <Link p={4} cursor=\"pointer\" d=\"block\" href={`#${id}`} {...rest}>\n      {name}\n    </Link>\n  );\n};\n","import {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport {\n  INSTALLATION_PREFIX,\n  USAGE_PREFIX,\n} from '../../../constants/id-prefixes';\nimport { DrawerLink } from './DrawerLink';\n\ninterface DrawerAccordionProps {\n  item: {\n    id: string;\n    name: string;\n    subContent: {\n      id: string;\n      name: string;\n    }[];\n  };\n}\n\nexport const DrawerAccordion: React.FC<DrawerAccordionProps> = ({ item }) => {\n  let prefix = '';\n  switch (item.id) {\n    case 'installation':\n      prefix = INSTALLATION_PREFIX;\n      break;\n    case 'usage':\n      prefix = USAGE_PREFIX;\n      break;\n    default:\n      prefix = '';\n      break;\n  }\n\n  return (\n    <Accordion key={item.id} allowMultiple>\n      <AccordionItem border=\"none\">\n        <h2>\n          <AccordionButton _focus={{}}>\n            <Box\n              fontSize=\"lg\"\n              flex=\"1\"\n              textAlign={{ lg: 'left', base: 'center' }}\n              py={2}\n            >\n              {item.name}\n            </Box>\n            <AccordionIcon />\n          </AccordionButton>\n        </h2>\n        <AccordionPanel pb={4} shadow=\"inner\" bg=\"#edeef1\">\n          {item.subContent.map(navItem => (\n            <DrawerLink\n              key={navItem.id}\n              name={navItem.name}\n              id={prefix + navItem.id}\n              py={2}\n              fontSize=\"md\"\n            >\n              {navItem}\n            </DrawerLink>\n          ))}\n        </AccordionPanel>\n      </AccordionItem>\n    </Accordion>\n  );\n};\n","import { Divider, ListItem } from '@chakra-ui/react';\nimport React from 'react';\nimport { DrawerAccordion } from './DrawerAccordion';\nimport { DrawerLink } from './DrawerLink';\n\ninterface DrawerItemProps {\n  item: {\n    id: string;\n    name: string;\n    subContent?: {\n      id: string;\n      name: string;\n    }[];\n  };\n}\n\nexport const DrawerItem: React.FC<DrawerItemProps> = ({ item }) => {\n  let listItemContent = <DrawerLink id={item.id} name={item.name} />;\n\n  if (item.subContent) {\n    listItemContent = (\n      <DrawerAccordion item={item as Required<DrawerItemProps['item']>} />\n    );\n  }\n\n  return (\n    <ListItem key={item.id} fontSize=\"lg\" color=\"black\">\n      {listItemContent}\n      <Divider />\n    </ListItem>\n  );\n};\n","import { Box, Heading, UnorderedList } from '@chakra-ui/react';\nimport React from 'react';\nimport { DrawerItem } from '../elements/Drawer/DrawerItem';\n\ninterface DrawerProps {}\n\n// const content = ['playground', 'pagination'];\nconst content = [\n  {\n    id: 'playground',\n    name: 'Playground',\n  },\n  {\n    id: 'installation',\n    name: 'Installation',\n    subContent: [\n      {\n        id: 'pagination',\n        name: 'pagination',\n      },\n      {\n        id: 'use-pagination',\n        name: 'use-pagination',\n      },\n      {\n        id: 'with-pagination',\n        name: 'with-pagination',\n      },\n      {\n        id: 'pagination-wrapper',\n        name: 'pagination-wrapper',\n      },\n      {\n        id: 'paginator',\n        name: 'paginator',\n      },\n    ],\n  },\n  {\n    id: 'usage',\n    name: 'Usage',\n    subContent: [\n      {\n        id: 'pagination',\n        name: 'pagination',\n      },\n      {\n        id: 'use-pagination',\n        name: 'use-pagination',\n      },\n      {\n        id: 'with-pagination',\n        name: 'with-pagination',\n      },\n      {\n        id: 'pagination-wrapper',\n        name: 'pagination-wrapper',\n      },\n      {\n        id: 'paginator',\n        name: 'paginator',\n      },\n    ],\n  },\n  {\n    id: 'api',\n    name: 'API',\n    subContent: [\n      {\n        id: 'pagination-options',\n        name: 'Pagination Options',\n      },\n      {\n        id: 'pagination-result/return',\n        name: 'Pagination Result/Return',\n      },\n      {\n        id: 'paginator',\n        name: 'Paginator',\n      },\n    ],\n  },\n];\n\nexport const Drawer: React.FC<DrawerProps> = () => {\n  return (\n    <Box\n      as=\"aside\"\n      minH={{ base: 'auto', lg: '100vh' }}\n      overflowX=\"auto\"\n      background=\"white\"\n      w={{ base: '100%', lg: '280px' }}\n      h={{ base: 'fit-content', lg: '100vh' }}\n      position={{ base: 'relative', lg: 'sticky' }}\n      left={0}\n      top={0}\n      flex=\"none\"\n    >\n      <Heading\n        as=\"h4\"\n        size=\"md\"\n        fontWeight=\"bold\"\n        p=\"4\"\n        bg=\"primary.main\"\n        color=\"white\"\n        textAlign=\"center\"\n      >\n        @bazhe/pagination\n      </Heading>\n      <UnorderedList\n        listStyleType=\"none\"\n        w=\"100%\"\n        ml={0}\n        textAlign={{ base: 'center', lg: 'left' }}\n      >\n        {content.map((item, index) => (\n          <DrawerItem key={item.id} item={item} />\n        ))}\n      </UnorderedList>\n    </Box>\n  );\n};\n","import {\n  Box,\n  Heading,\n  Link,\n  ListItem,\n  Table,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  UnorderedList,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport gfm from 'remark-gfm';\n\ninterface MarkdownProps {\n  markdown: string;\n  id?: string;\n  prefix?: string;\n}\n\nexport const Markdown: React.FC<MarkdownProps> = ({\n  markdown,\n  id,\n  prefix = '',\n}) => {\n  return (\n    <Box id={id} as=\"section\" w={{ base: '100%', lg: '80%' }}>\n      <ReactMarkdown\n        plugins={[gfm]}\n        components={{\n          h1: ({ node, ...props }) => (\n            <Heading as=\"h1\" size=\"xl\" mb={4} {...props} />\n          ),\n          h2: ({ node, ...props }) => (\n            <Heading\n              id={(node.children[0].value as string).toLowerCase()}\n              as=\"h2\"\n              size=\"lg\"\n              my={4}\n              {...props}\n            />\n          ),\n          h3: ({ node, ...props }) => (\n            <Heading\n              id={\n                (prefix + node.children[0].value)\n                  .split(' ')\n                  .join('-')\n                  .toLowerCase() as string\n              }\n              as=\"h3\"\n              size=\"md\"\n              my={4}\n              {...props}\n            />\n          ),\n          h4: ({ node, ...props }) => (\n            <Heading as=\"h4\" size=\"sm\" my={4} {...props} />\n          ),\n          h5: ({ node, ...props }) => (\n            <Heading as=\"h5\" size=\"xs\" my={4} {...props} />\n          ),\n          code: ({ node, className, inline, children, ...props }) => {\n            const match = /language-(\\w+)/.exec(className || '');\n\n            return !inline && match ? (\n              <SyntaxHighlighter\n                {...props}\n                style={dracula}\n                language={match[0].split('-')[1]} // language-javascript, get the javascript part only\n                PreTag=\"div\"\n                children={String(children).replace(/\\n$/, '')}\n              />\n            ) : (\n              <Box\n                as=\"pre\"\n                py={4}\n                px={2}\n                shadow=\"inner\"\n                bg=\"gray.100\"\n                mb={4}\n                className={className}\n                children={children}\n                {...props}\n              />\n            );\n          },\n          p: ({ node, ...props }) => <Text {...props} mb={1} />,\n          a: ({ node, ...props }) => <Link {...props} color=\"blue.500\" />,\n          ul: ({ node, ordered, ...props }) => (\n            <UnorderedList listStylePos=\"inside\" {...props} />\n          ),\n          li: ({ node, ordered, ...props }) => <ListItem {...props} />,\n          // Table\n          table: ({ node, ...props }) => (\n            <Table variant=\"simple\" {...props} shadow=\"lg\" mt={2} mb={4} />\n          ),\n          thead: ({ node, ...props }) => (\n            <Thead\n              bg=\"primary.main\"\n              // variant=\"simple\"\n              {...props}\n            />\n          ),\n          tbody: ({ node, ...props }) => (\n            <Tbody\n              // variant=\"simple\"\n              {...props}\n            />\n          ),\n          tr: ({ node, ...props }) => (\n            <Tr\n              // variant=\"simple\"\n              {...props}\n            />\n          ),\n          th: ({ node, ...props }) => (\n            <Th\n              color=\"white\"\n              // variant=\"simple\"\n              {...props}\n            />\n          ),\n          td: ({ node, ...props }) => (\n            <Td\n              // variant=\"simple\"\n              {...props}\n            />\n          ),\n        }}\n        children={markdown}\n      />\n    </Box>\n  );\n};\n","import React from 'react';\nimport { Markdown } from './markdowns/Markdown';\n\ninterface InstallationProps {\n  children?: any;\n}\n\nconst markdown = `## API    \n\n\n### Pagination Options\n\n\n| Name         | Type                | Default      | Description                                                                                                              |\n| ------------ | ------------------- | ------------ | ------------------------------------------------------------------------------------------------------------------------ |\n| items        | T[] \\\\| undefined    | []           | Initial items for the pagination                                                                                         |\n| limit        | number \\\\| undefined | 4            | The limit of items per page                                                                                              |\n| currentPage  | number \\\\| undefined | 1            | The current page                                                                                                         |\n| links        | number \\\\| undefined | 10           | Links is the number of pages/links/buttons to display. Example: How many buttons you want to show in the pagination bar? |\n| totalResults | number \\\\| undefined | items.length | Total results is the maximum number of items. Usually refers to items.length (so there's no need to pass it)             |\n\n### Pagination Result/Return\n\nThe results from the pagination are inside of the paginationResult object\n\n- **paginationResult**\n\n| Name              | Type                | Description                                                                                                               |\n| ----------------- | ------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| items             | T[] \\\\| undefined    | The items that will change depending on the pagination (currentPage, limit ...)                                           |\n| all_items         | T[] \\\\| undefined    | Initial/All items for the pagination                                                                                      |\n| total_pages       | number \\\\| undefined | The total pages for the provided items. Example: 12 items with limit 2 -> 6 total pages                                   |\n| pages             | number              | The number of pages between range(first_page, last_page)                                                                  |\n| current_page      | number              | Current page                                                                                                              |\n| first_page        | number              | First page, depends on the link (buttons/links to display in the pagination bar) and limit (items per page)               |\n| last_page         | number              | Last page, depends on the link (buttons/links to display in the pagination bar) and limit (items per page)                |\n| previous_page     | number              | Previous page, current_page - 1                                                                                           |\n| next_page         | number              | Next page, current_page + 1                                                                                               |\n| has_previous_page | boolean             |\n| has_next_page     | boolean             |\n| total_results     | number              | The length of the initial items                                                                                           |\n| results           | number              | Results per page                                                                                                          |\n| first_result      | number              | First result is the index of the item that's first for the current page - items[first_result] (depends on link and limit) |\n| last_result       | number              | Last result is the index of the item that's last for the current page - items[last_result] (depends on link and limit)    |\n| limit             | number              | The limit of items per page                                                                                               |\n\n- **Pagination handlers for managing state**\n\n| Name            | Type                                                   | Description                                                         |\n| --------------- | ------------------------------------------------------ | ------------------------------------------------------------------- |\n| setCurrentPage  | (n: number) => void                                    | Function handler for changing the current page                      |\n| setItems        | (items: T[]) => void                                   | Function handler for changing the items                             |\n| setPageAndItems | (payload: { items: I[]; currentPage: number }) => void | Function handler for changing current page and the items themselves |\n| nextPage        | () => void                                             | Function handler for changing to next page                          |\n| previousPage    | () => void                                             | Function handler for changing to previous page                      |\n\n### Paginator\n\nThe main class that is responsible for the pagination logic:\n\nIn the table bellow you can see some of the Paginator class methods and their usage\n\n| Name                                        | Type                                                                                | Description                                                                                     |\n| ------------------------------------------- | ----------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------- |\n| constructor(perPage: number, links: number) |                                                                                     | The constructor that creates paginator object. Example: new Paginator(4, 10)                    |\n| build                                       | \\\\<T>(total_results: number, current_page?: number, items?: T[]) => [PaginationResult](#pagination-result/return) | The main method that returns the fully expected pagination result                              |\n| getFirstPage                                | (currentPage: number) => number                                                     | Gets first page, depending on the number of links (ex. buttons displayed in the pagination bar) |\n| getLastPage                                 | (currentPage: number) => number                                                     | Gets last page, depending on the number of links (ex. buttons displayed in the pagination bar)  |\n| getFirstResult                              | (currentPage: number) => number                                                     | Gets first result/index, depending on the limit/perPage and current page                        |\n| getLastResult                               | (currentPage: number) => number                                                     | Gets last result/index, depending on the limit/perPage and current page                      \n`;\n\nexport const Api: React.FC<InstallationProps> = () => {\n  return <Markdown markdown={markdown} />;\n};\n","import React from 'react';\nimport { INSTALLATION_PREFIX } from '../../constants/id-prefixes';\nimport { Markdown } from './markdowns/Markdown';\n\ninterface InstallationProps {\n  children?: any;\n}\n\nconst markdown = `## Installation    \n\n### pagination\n\nYou can choose to install all pagination packages and all utilities that come with the packages (bundled in one):\n\n~~~bash\nnpm install @bazhe/pagination\nor\nyarn install @bazhe/pagination\n~~~\n\n**or you can install each package individually:**\n\n\n### use-pagination\n\nReact hook for handling your pagination. Depends on: [@bazhe/paginator](#${INSTALLATION_PREFIX}paginator)\n\n~~~bash\nnpm install @bazhe/use-pagination\nor\nyarn install @bazhe/use-pagination\n~~~\n\n### with-pagination\n\nReact Higher-Order Component for handling your pagination. Depends on: [@bazhe/paginator](#${INSTALLATION_PREFIX}paginator)\n\n~~~bash\nnpm install @bazhe/with-pagination\nor\nyarn install @bazhe/with-pagination\n~~~\n\n### pagination-wrapper\n\nReact Wrapper Component for handling your pagination\n\n~~~bash\nnpm install @bazhe/pagination-wrapper\nor\nyarn install @bazhe/pagination-wrapper\n~~~\n\n### paginator\n\nUtilities for handling your pagination. Used in: [@bazhe/use-pagination](#${INSTALLATION_PREFIX}use-pagination), [@bazhe/with-pagination](#${INSTALLATION_PREFIX}with-pagination), [@bazhe/pagination-wrapper](#${INSTALLATION_PREFIX}pagination-wrapper)\n\n~~~bash\nnpm install @bazhe/paginator\nor\nyarn install @bazhe/paginator\n~~~\n\n`;\n\nexport const Installation: React.FC<InstallationProps> = () => {\n  return <Markdown markdown={markdown} prefix={INSTALLATION_PREFIX} />;\n};\n","import { Button, ButtonProps } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface PrimaryButtonProps extends ButtonProps {\n  onClick: (...args: any) => void;\n}\n\nexport const PrimaryButton: React.FC<PrimaryButtonProps> = ({\n  children,\n  onClick,\n  ...rest\n}) => {\n  return (\n    <Button\n      bg=\"primary.main\"\n      onClick={onClick}\n      color=\"white\"\n      _hover={{\n        bg: 'blue.600',\n      }}\n      _focus={{}}\n      _active={{}}\n      {...rest}\n    >\n      {children}\n    </Button>\n  );\n};\n","import { usePagination } from '@bazhe/use-pagination';\nimport { FormLabel } from '@chakra-ui/form-control';\nimport { Input } from '@chakra-ui/input';\nimport {\n  Box,\n  Divider,\n  Flex,\n  Heading,\n  ListItem,\n  UnorderedList,\n  VStack,\n} from '@chakra-ui/layout';\nimport {\n  NumberDecrementStepper,\n  NumberIncrementStepper,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { PrimaryButton } from '../elements/PrimaryButton';\n\ninterface PlaygroundProps {}\n\nconst defaultItems = [\n  'item-one',\n  'item-two',\n  'item-three',\n  'item-four',\n  'item-five',\n  'item-six',\n  'item-seven',\n];\n\nexport const Playground: React.FC<PlaygroundProps> = () => {\n  const {\n    paginationResult,\n    nextPage,\n    previousPage,\n    setCurrentPage,\n    setItems,\n  } = usePagination({\n    items: defaultItems,\n    limit: 2,\n  });\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const removeHandler = (item: string) => {\n    if (!paginationResult.all_items) return;\n\n    setItems(paginationResult.all_items?.filter(_item => _item !== item));\n  };\n\n  return (\n    <Box\n      id=\"playground\"\n      w=\"90%\"\n      maxW=\"900px\"\n      shadow=\"xl\"\n      rounded=\"2xl\"\n      alignItems=\"stretch\"\n      maxH={{ base: '100vh', md: 'fit-content' }}\n      overflowY=\"auto\"\n    >\n      <Heading\n        as=\"h2\"\n        bg=\"primary.main\"\n        color=\"white\"\n        size=\"lg\"\n        p={4}\n        roundedTop=\"2xl\"\n        textAlign=\"center\"\n      >\n        Pagination data and methods:{' '}\n      </Heading>\n      <Flex\n        direction={{ base: 'column', md: 'row' }}\n        roundedBottom=\"2xl\"\n        p={4}\n        justify=\"space-between\"\n      >\n        <VStack w=\"100%\" spacing={4} m={2}>\n          <Heading as=\"h4\" size=\"md\" textAlign=\"center\">\n            Methods:\n          </Heading>\n          <Divider />\n          <Flex w=\"100%\" justify=\"center\" mt={0}>\n            <PrimaryButton\n              onClick={() => previousPage()}\n              mr={8}\n              isDisabled={!paginationResult.has_previous_page}\n            >\n              Prev Page\n            </PrimaryButton>\n            <PrimaryButton\n              onClick={() => nextPage()}\n              isDisabled={!paginationResult.has_next_page}\n            >\n              Next Page\n            </PrimaryButton>\n          </Flex>\n          <Divider />\n          <div className=\"mb-4\">\n            <FormLabel htmlFor=\"current-page\">Set current page</FormLabel>\n            <NumberInput\n              id=\"current-page\"\n              placeholder=\"Set current page\"\n              value={paginationResult.current_page}\n              onChange={(_, value) => setCurrentPage(value)}\n            >\n              <NumberInputField />\n              <NumberInputStepper>\n                <NumberIncrementStepper />\n                <NumberDecrementStepper />\n              </NumberInputStepper>\n            </NumberInput>\n          </div>\n          <Divider />\n          <Box w=\"100%\">\n            <Box as=\"form\" className=\"mb-4\" mb={4}>\n              <FormLabel htmlFor=\"items\">Add/Remove items:</FormLabel>\n              <Flex>\n                <Input\n                  ref={inputRef}\n                  id=\"items\"\n                  type=\"text\"\n                  placeholder=\"Add item\"\n                  roundedRight=\"none\"\n                />\n                <PrimaryButton\n                  type=\"submit\"\n                  onClick={e => {\n                    e.preventDefault();\n                    if (!paginationResult.all_items || !inputRef.current)\n                      return;\n\n                    setItems([\n                      ...paginationResult.all_items,\n                      inputRef.current.value,\n                    ]);\n                  }}\n                  roundedLeft=\"none\"\n                >\n                  +\n                </PrimaryButton>\n              </Flex>\n            </Box>\n            <UnorderedList\n              className=\"mx-auto w-5/6 max-h-32 overflow-y-auto shadow-md\"\n              listStyleType=\"none\"\n              shadow=\"inner\"\n              border=\"1px solid\"\n              borderColor=\"gray.100\"\n              ml={0}\n              maxH=\"250px\"\n              overflowY=\"auto\"\n            >\n              {paginationResult.all_items?.map((item, index) => (\n                <ListItem\n                  p={4}\n                  key={item + index}\n                  onClick={() => removeHandler(item)}\n                  textAlign=\"center\"\n                  borderBottom=\"1px solid\"\n                  borderColor=\"gray.200\"\n                  cursor=\"pointer\"\n                  transition=\"all 0.2s\"\n                  css={`\n                    :hover {\n                      position: relative;\n                      :before {\n                        position: absolute;\n                        content: 'Remove';\n                        background: #fda1a1;\n                        top: 0;\n                        bottom: 0;\n                        left: 0;\n                        right: 0;\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        color: white;\n                      }\n                    }\n                  `}\n                >\n                  {item}\n                </ListItem>\n              ))}\n            </UnorderedList>\n          </Box>\n        </VStack>\n        <Divider orientation=\"vertical\" height=\"auto\" />\n        <Box pl={3}>\n          <Heading as=\"h4\" size=\"md\" textAlign=\"center\">\n            Data:\n          </Heading>\n          <pre style={{ fontSize: '14px' }}>\n            {JSON.stringify(paginationResult, null, 2)}\n          </pre>\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n","import React from 'react';\nimport { USAGE_PREFIX } from '../../constants/id-prefixes';\nimport { Markdown } from './markdowns/Markdown';\n\ninterface InstallationProps {\n  children?: any;\n}\n\nconst markdown = `## Usage    \n\n\n### pagination\n\n#### Import\n\n\n~~~jsx\n// React.js:\nimport { usePagination } from '@bazhe/pagination'; // Custom hook\nimport { Pagination } from '@bazhe/pagination'; // Pagination wrapper\nimport { withPagination } from '@bazhe/pagination'; // HOC for pagination\n// React.js | Vanilla JavaScript:\nimport { Paginator, generatePaginator } from '@bazhe/paginator'; // Utilities for pagination\n~~~\n\n#### Initialization\n\n- [@bazhe/use-pagination](#${USAGE_PREFIX}use-pagination)\n- [@bazhe/pagination-wrapper](#${USAGE_PREFIX}pagination-wrapper)\n- [@bazhe/with-pagination](#${USAGE_PREFIX}with-pagination)\n- [@bazhe/paginator](#${USAGE_PREFIX}paginator)\n\n\n### use-pagination\n\n#### Import\n\n\nTypescript usage example in: [https://github.com/Blagoj5/pagination/blob/main/example/components/pagination-hook-demo.tsx](https://github.com/Blagoj5/pagination/blob/main/example/components/pagination-hook-demo.tsx)\n\n~~~jsx\nimport { usePagination } from '@bazhe/use-pagination';\n~~~\n\n#### Initialization\n\n**Syntax**: usePagination([paginationOptions](#pagination-options))\n\n**Returns**: [PaginationResult](#pagination-result/return)\n\n~~~jsx\nexport const PaginationHookDemo: React.FC = () => {\n  const {\n    paginationResult,\n    nextPage,\n    previousPage,\n    setCurrentPage,\n    setItems,\n  } = usePagination({\n    items: defaultItems,\n    limit: 2,\n  });\n\n  return (\n    <div>\n      Pagination data:\n      <pre>{JSON.stringify(paginationResult, null, 2)}</pre>\n    </div>\n  );\n};\n~~~\n\n### with-pagination\n\n#### Import\n\n\nTypescript usage example in: [https://github.com/Blagoj5/pagination/blob/main/example/components/pagination-hoc-demo.tsx\n](https://github.com/Blagoj5/pagination/blob/main/example/components/pagination-hoc-demo.tsx\n)\n\n~~~jsx\nimport { withPagination } from '@bazhe/with-pagination';\n~~~\n\n#### Initialization\n\n**Syntax**: withPagination(WrappedComponent, [paginationOptions](#pagination-options))\n\n**Returns**: [PaginationResult](#pagination-result/return) as props to the wrapped component\n\n**Function based components**\n~~~jsx\nconst fakeData = [1, 2, 3]\n\nconst FunctionalBasedComponent = ({\n  paginationResult,\n  nextPage,\n  previousPage,\n  setItems,\n  setCurrentPage,\n}: WithPaginationProps<typeof fakeData[0]>) => {\n  // pass the typeof the element in this case items have number\n\n  return (\n    <div>\n        The pagination result:\n        <pre>{JSON.stringify(paginationResult)}</pre>\n    </div>\n    );\n};\n\nexport const PaginationHocHookDemo = withPagination(FunctionalBasedComponent, {\n  items: fakeData,\n  limit: 2,\n});\n~~~\n\n**Class based components**\n~~~jsx\nconst fakeData = [1, 2, 3]\n\nconst fakeData = [1, 2, 3]\n\nclass ClassBasedComponent extends React.Component<\n  WithPaginationProps<typeof fakeData[0]>\n> {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      nextPage,\n      paginationResult,\n      previousPage,\n      setCurrentPage,\n      setItems,\n    } = this.props;\n\n  return (\n    <div>\n        The pagination result:\n        <pre>{JSON.stringify(paginationResult)}</pre>\n    </div>\n    );\n  }\n}\n\nexport const PaginationHocHookDemo = withPagination(ClassBasedComponent, {\n  items: fakeData,\n  limit: 2,\n});\n~~~\n\n### pagination-wrapper\n\n#### Import\n\nTypescript usage example in: [https://github.com/Blagoj5/pagination/blob/main/example/components/pagination-wrapper-demo.tsx](https://github.com/Blagoj5/pagination/blob/main/example/components/pagination-wrapper-demo.tsx)\n\n~~~jsx\nimport { Pagination } from '@bazhe/pagination-wrapper';\n~~~\n\n#### Initialization\n\n~~~jsx\nconst Playground = (props) => {\n    return <pre>{JSON.stringify(props.paginationResult, null, 2)}</pre>\n}\n\n\nconst fakeData = [1, 2, 3]\n\nexport const PaginationWrapper = () => {\n  // With children callback\n  return (\n    <Pagination paginationOptions={{ items: fakeData, limit: 2 }}>\n      {props => <Playground {...props} />}\n    </Pagination>\n  );\n\n  // Another example with callback\n  return (<Pagination paginationOptions={{items: fakeData, limit: 2}}>\n    {({nextPage, paginationResult, previousPage, setCurrentPage, setItems }) => {\n      // do something with the data from above\n      // ...\n      return null; // return anything / JSX ... / string etc...\n    }\n  </Pagination>)\n\n   //   With render prop\n  return (\n    <Pagination paginationOptions={{ items, limit: 2 }} render={Playground} />\n  );\n};\n~~~\n\n### paginator\n\n\nTypescript usage example in: [https://github.com/Blagoj5/pagination/blob/main/example/components/paginator-demo.tsx](https://github.com/Blagoj5/pagination/blob/main/example/components/paginator-demo.tsx)\n\n#### Import\n\n~~~js\nimport { Paginator } from '@bazhe/paginator'; // The paginator class itself, provides with a lot of methods for building your pagination object\nimport { generatePaginator } from '@bazhe/paginator'; // Implements Paginator class and creates the paginator object. generatePaginator is an initializer for the Paginator class (in case you don't want to use it manually)\n~~~\n\n#### Initialization\n\n**Syntax**: generatePaginator([paginationOptions](#pagination-options))\n\n**Returns**: [PaginationResult](#pagination-result/return)\n\n~~~js\nexport const Paginator: React.FC = () => {\n  return (\n    <div\n      style={{\n        padding: '1rem',\n        boxShadow: '2px 2px 7px 0 gray',\n        width: '30%',\n        background: 'white',\n      }}\n    >\n      <h3>Generate paginator</h3>\n      <pre>\n        {JSON.stringify(\n          generatePaginator({ items: [], currentPage: 1 }),\n          null,\n          2\n        )}\n      </pre>\n    </div>\n  );\n};\n~~~\n\n`;\n\nexport const Usage: React.FC<InstallationProps> = () => {\n  return <Markdown markdown={markdown} prefix={USAGE_PREFIX} />;\n};\n","import { Box, Heading, Text, Link, VStack, Divider } from '@chakra-ui/react';\nimport React from 'react';\nimport { Api } from '../components/modules/Api';\nimport { Installation } from '../components/modules/Installation';\nimport { Playground } from '../components/modules/Playground';\nimport { Usage } from '../components/modules/Usage';\n\nexport const Home: React.FC = () => {\n  return (\n    <Box p={6} flex=\"auto\" w={{ lg: '85%', base: '100%' }} bg=\"gray.50\">\n      <Box mb={8}>\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"center\">\n          Documentation for: @bazhe/pagination\n        </Heading>\n        <Text textAlign=\"center\" fontSize={{ base: 'md', lg: 'lg' }}>\n          Github:{' '}\n          <Link href=\"https://github.com/Blagoj5/pagination\" color=\"blue.500\">\n            https://github.com/Blagoj5/pagination\n          </Link>\n        </Text>\n      </Box>\n      <VStack spacing={4}>\n        <Playground />\n        <Divider />\n        <Installation />\n        <Divider />\n        <Usage />\n        <Api />\n      </VStack>\n    </Box>\n  );\n};\n","import { Box, ChakraProvider, extendTheme, Flex } from '@chakra-ui/react';\nimport * as React from 'react';\nimport { Drawer } from './components/modules/Drawer';\nimport { Home } from './pages/Home';\nimport './styles/main.css';\n\nconst theme = extendTheme({\n  colors: {\n    primary: {\n      100: '#f7fafc',\n      // ...\n      900: '#1a202c',\n      main: 'rgba(59, 130, 246, 1)',\n    },\n  },\n  styles: {\n    global: {\n      body: {\n        color: 'black',\n      },\n    },\n  },\n});\n\nexport const App = () => (\n  <ChakraProvider theme={theme}>\n    <Box minH=\"100vh\" bg=\"gray.50\">\n      <Flex d={{ lg: 'flex', base: 'block' }}>\n        <Drawer />\n        <Home />\n      </Flex>\n    </Box>\n  </ChakraProvider>\n);\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}